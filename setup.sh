#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è —Ä–æ–±–æ—Ç–∞
# –ù–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è https://github.com/meshkovQA/Robot.git

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
if [[ $EUID -eq 0 ]]; then
    print_error "–ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ –æ—Ç root. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
    exit 1
fi

print_info "ü§ñ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ–±–æ—Ç–æ–º"
print_info "üìÅ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/meshkovQA/Robot.git"
echo "=============================================="

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
print_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
sudo apt update && sudo apt upgrade -y

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
sudo apt install -y \
    python3-pip \
    python3-flask \
    python3-smbus \
    python3-smbus2 \
    i2c-tools \
    git \
    curl

# Python –ø–∞–∫–µ—Ç—ã —á–µ—Ä–µ–∑ apt (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Å–ø–æ—Å–æ–±)
print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –ø–∞–∫–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ apt..."
sudo apt install -y python3-flask python3-smbus2 || print_warning "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–∞–∫–µ—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ apt"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ I2C
print_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ I2C..."
if ! grep -q "^dtparam=i2c_arm=on" /boot/config.txt; then
    echo "dtparam=i2c_arm=on" | sudo tee -a /boot/config.txt
    print_success "I2C –≤–∫–ª—é—á–µ–Ω –≤ config.txt"
fi

if ! grep -q "^i2c-dev" /etc/modules; then
    echo "i2c-dev" | sudo tee -a /etc/modules
    print_success "–ú–æ–¥—É–ª—å i2c-dev –¥–æ–±–∞–≤–ª–µ–Ω"
fi

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—ã
sudo usermod -a -G i2c,gpio,spi $USER

# –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
print_info "–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..."
PROJECT_DIR="/home/$USER/robot_web"
mkdir -p $PROJECT_DIR/{templates,static,logs}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–∞–∫–µ—Ç–æ–≤ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Python –ø–∞–∫–µ—Ç–æ–≤..."
if ! python3 -c "import smbus2" 2>/dev/null; then
    print_warning "smbus2 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ apt, —Å–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
    
    cd $PROJECT_DIR
    python3 -m venv venv
    source venv/bin/activate
    pip install smbus2 flask
    
    # –°–æ–∑–¥–∞–Ω–∏–µ wrapper —Å–∫—Ä–∏–ø—Ç–∞
    cat > $PROJECT_DIR/run_server.sh << 'EOF'
#!/bin/bash
cd /home/pi/robot_web
source venv/bin/activate
exec python3 robot_server.py
EOF
    chmod +x $PROJECT_DIR/run_server.sh
    EXEC_START="$PROJECT_DIR/run_server.sh"
    print_success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"
else
    print_success "–ü–∞–∫–µ—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º–Ω—ã–π Python"
    EXEC_START="/usr/bin/python3 $PROJECT_DIR/robot_server.py"
fi

# –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ —Å GitHub
print_info "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ —Å GitHub..."

# URL –≤–∞—à–µ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
GITHUB_REPO="https://raw.githubusercontent.com/meshkovQA/Robot/main"

# –§—É–Ω–∫—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
download_file() {
    local file_url="$1"
    local dest_path="$2"
    local file_name="$3"
    
    print_info "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ $file_name..."
    if curl -fsSL "$file_url" -o "$dest_path"; then
        print_success "$file_name —Å–∫–∞—á–∞–Ω"
        return 0
    else
        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å $file_name"
        print_warning "URL: $file_url"
        return 1
    fi
}

# –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
download_file "$GITHUB_REPO/robot_server.py" "$PROJECT_DIR/robot_server.py" "robot_server.py"
download_file "$GITHUB_REPO/templates/index.html" "$PROJECT_DIR/templates/index.html" "index.html"
download_file "$GITHUB_REPO/static/style.css" "$PROJECT_DIR/static/style.css" "style.css"
download_file "$GITHUB_REPO/static/script.js" "$PROJECT_DIR/static/script.js" "script.js"

# –î–µ–ª–∞–µ–º robot_server.py –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
chmod +x $PROJECT_DIR/robot_server.py

# –°–æ–∑–¥–∞–Ω–∏–µ systemd service
print_info "–°–æ–∑–¥–∞–Ω–∏–µ systemd service..."
sudo tee /etc/systemd/system/robot-web.service > /dev/null << EOF
[Unit]
Description=Robot Web Interface
After=network.target
Wants=network.target

[Service]
Type=simple
User=$USER
Group=$USER
WorkingDirectory=$PROJECT_DIR
ExecStart=$EXEC_START
Restart=always
RestartSec=10
StandardOutput=journal
StandardError=journal

Environment=PYTHONPATH=$PROJECT_DIR
Environment=PYTHONUNBUFFERED=1

SupplementaryGroups=i2c gpio spi

[Install]
WantedBy=multi-user.target
EOF

# –í–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
sudo systemctl daemon-reload
sudo systemctl enable robot-web.service

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
print_info "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."

cat > $PROJECT_DIR/start.sh << 'EOF'
#!/bin/bash
sudo systemctl start robot-web.service
sudo systemctl status robot-web.service --no-pager
EOF
chmod +x $PROJECT_DIR/start.sh

cat > $PROJECT_DIR/stop.sh << 'EOF'
#!/bin/bash
sudo systemctl stop robot-web.service
EOF
chmod +x $PROJECT_DIR/stop.sh

cat > $PROJECT_DIR/restart.sh << 'EOF'
#!/bin/bash
sudo systemctl restart robot-web.service
sudo systemctl status robot-web.service --no-pager
EOF
chmod +x $PROJECT_DIR/restart.sh

cat > $PROJECT_DIR/logs.sh << 'EOF'
#!/bin/bash
sudo journalctl -u robot-web.service -f
EOF
chmod +x $PROJECT_DIR/logs.sh

cat > $PROJECT_DIR/status.sh << 'EOF'
#!/bin/bash
echo "=== –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞ ==="
sudo systemctl status robot-web.service --no-pager

echo -e "\n=== –°–µ—Ç–µ–≤—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è ==="
sudo netstat -tlnp | grep :5000 || echo "–ü–æ—Ä—Ç 5000 –Ω–µ –∑–∞–Ω—è—Ç"

echo -e "\n=== I2C —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ ==="
if command -v i2cdetect &> /dev/null; then
    sudo i2cdetect -y 1
else
    echo "i2c-tools –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
fi

echo -e "\n=== IP –∞–¥—Ä–µ—Å–∞ ==="
hostname -I

echo -e "\n=== –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ ==="
sudo journalctl -u robot-web.service --no-pager -n 10
EOF
chmod +x $PROJECT_DIR/status.sh

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
print_info "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."

cat > $PROJECT_DIR/update.sh << 'EOF'
#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ —Å GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
# –î–ª—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è https://github.com/meshkovQA/Robot.git

set -e

GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${BLUE}üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ —Å GitHub${NC}"
echo "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/meshkovQA/Robot.git"
echo "=============================================="

PROJECT_DIR="/home/pi/robot_web"
GITHUB_REPO="https://raw.githubusercontent.com/meshkovQA/Robot/main"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –ø–∞–ø–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [[ ! -d "$PROJECT_DIR" ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è –ü–∞–ø–∫–∞ $PROJECT_DIR –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!${NC}"
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ setup —Å–∫—Ä–∏–ø—Ç"
    exit 1
fi

cd $PROJECT_DIR

# –§—É–Ω–∫—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Å –±—ç–∫–∞–ø–æ–º
download_with_backup() {
    local file_url="$1"
    local file_path="$2"
    local file_name="$3"
    
    echo -e "${BLUE}üì• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ $file_name...${NC}"
    
    # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø –µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [[ -f "$file_path" ]]; then
        backup_name="$file_path.backup.$(date +%Y%m%d_%H%M%S)"
        cp "$file_path" "$backup_name"
        echo "   üíæ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø: $backup_name"
    fi
    
    # –°–∫–∞—á–∏–≤–∞–µ–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é
    if curl -fsSL "$file_url" -o "$file_path"; then
        echo -e "   ‚úÖ $file_name –æ–±–Ω–æ–≤–ª–µ–Ω"
        return 0
    else
        echo -e "   ${RED}‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è $file_name${NC}"
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –±—ç–∫–∞–ø–∞ –µ—Å–ª–∏ –µ—Å—Ç—å
        if [[ -f "$backup_name" ]]; then
            mv "$backup_name" "$file_path"
            echo "   üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑ –±—ç–∫–∞–ø–∞"
        fi
        return 1
    fi
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
echo -e "${BLUE}‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...${NC}"
sudo systemctl stop robot-web.service 2>/dev/null || echo "–°–µ—Ä–≤–∏—Å —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

# –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
download_with_backup "$GITHUB_REPO/robot_server.py" "robot_server.py" "robot_server.py"
download_with_backup "$GITHUB_REPO/templates/index.html" "templates/index.html" "index.html"
download_with_backup "$GITHUB_REPO/static/style.css" "static/style.css" "style.css"
download_with_backup "$GITHUB_REPO/static/script.js" "static/script.js" "script.js"

# –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
chmod +x robot_server.py

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Python
echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Python...${NC}"
if python3 -m py_compile robot_server.py 2>/dev/null; then
    echo -e "   ‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
else
    echo -e "   ${RED}‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –≤ robot_server.py${NC}"
    echo "–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –≤–µ—Ä—Å–∏—é..."
    latest_backup=$(ls -t robot_server.py.backup.* 2>/dev/null | head -1)
    if [[ -n "$latest_backup" ]]; then
        mv "$latest_backup" robot_server.py
        echo "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑: $latest_backup"
    fi
    exit 1
fi

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
echo -e "${BLUE}üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞...${NC}"
sudo systemctl start robot-web.service

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
sleep 3

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo -e "${BLUE}üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞...${NC}"
if sudo systemctl is-active --quiet robot-web.service; then
    echo -e "‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω"
    
    # –ü–æ–∫–∞–∑–∞—Ç—å IP –¥–ª—è –¥–æ—Å—Ç—É–ø–∞
    LOCAL_IP=$(hostname -I | awk '{print $1}')
    echo -e "\nüåê –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É:"
    echo -e "   http://localhost:5000"
    echo -e "   http://$LOCAL_IP:5000"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
    sleep 2
    if curl -s -o /dev/null -w "%{http_code}" "http://localhost:5000" | grep -q "200"; then
        echo -e "‚úÖ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—Ç–≤–µ—á–∞–µ—Ç"
    else
        echo -e "‚ö†Ô∏è –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏"
    fi
else
    echo -e "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"
    echo -e "\nüìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:"
    sudo journalctl -u robot-web.service --no-pager -n 10
    exit 1
fi

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
echo -e "\nüìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å:"
sudo systemctl status robot-web.service --no-pager -l | head -15

echo -e "\n${GREEN}üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
echo -e "\nüí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo -e "   ./logs.sh    - –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
echo -e "   ./status.sh  - –ø–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞"
echo -e "   ./restart.sh - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö"

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤ (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5)
echo -e "\nüßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤..."
find . -name "*.backup.*" -type f | sort | head -n -5 | xargs rm -f 2>/dev/null || true
EOF
chmod +x $PROJECT_DIR/update.sh

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
files_ok=true

for file in "robot_server.py" "templates/index.html" "static/style.css" "static/script.js"; do
    if [[ -f "$PROJECT_DIR/$file" ]] && [[ -s "$PROJECT_DIR/$file" ]]; then
        print_success "‚úì $file"
    else
        print_error "‚úó $file (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—É—Å—Ç–æ–π)"
        files_ok=false
    fi
done

echo
echo "=============================================="
if [[ "$files_ok" == "true" ]]; then
    print_success "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
else
    print_warning "‚ö†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏"
fi
echo
print_info "–ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:"
echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω I2C"
echo "‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –≤ $PROJECT_DIR"
if [[ "$files_ok" == "true" ]]; then
    echo "‚úÖ –§–∞–π–ª—ã —Å–∫–∞—á–∞–Ω—ã —Å GitHub"
else
    echo "‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã –Ω–µ —Å–∫–∞—á–∞–ª–∏—Å—å (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π)"
fi
echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ systemd service"
echo "‚úÖ –°–æ–∑–¥–∞–Ω—ã —Å–∫—Ä–∏–ø—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
echo "‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (./update.sh)"
echo
print_info "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ:"
echo "   ls -la $PROJECT_DIR"
echo "   ls -la $PROJECT_DIR/templates/"
echo "   ls -la $PROJECT_DIR/static/"
echo
if [[ "$files_ok" != "true" ]]; then
    echo "2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ–∞–π–ª—ã –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:"
    echo "   https://github.com/meshkovQA/Robot.git"
    echo "   –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å:"
    echo "   Robot/"
    echo "   ‚îú‚îÄ‚îÄ robot_server.py"
    echo "   ‚îú‚îÄ‚îÄ templates/index.html"
    echo "   ‚îú‚îÄ‚îÄ static/style.css"
    echo "   ‚îî‚îÄ‚îÄ static/script.js"
    echo
fi
echo "3. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É:"
echo "   sudo reboot"
echo  
echo "4. –ü–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å:"
echo "   cd $PROJECT_DIR && ./status.sh"
echo
echo "5. –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:"
echo "   http://$(hostname -I | awk '{print $1}'):5000"
echo
echo "üí° –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –∏–∑ GitHub –≤ –±—É–¥—É—â–µ–º:"
echo "   cd $PROJECT_DIR && ./update.sh"
echo
print_warning "–í–ê–ñ–ù–û: –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ I2C!"
print_info "–°–µ—Ä–≤–∏—Å –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ."