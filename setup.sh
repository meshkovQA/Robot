#!/bin/bash
# setup.sh ‚Äî —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Ä–æ–±–æ—Ç–∞ —Å USB –∫–∞–º–µ—Ä–æ–π v2.1 (git clone/pull, –±–µ–∑ .env)

set -euo pipefail

RED='\033[0;31m'; GREEN='\033[0;32m'; YELLOW='\033[1;33m'; BLUE='\033[0;34m'; NC='\033[0m'
info(){ echo -e "${BLUE}[INFO]${NC} $*"; }
ok(){ echo -e "${GREEN}[OK]${NC} $*"; }
warn(){ echo -e "${YELLOW}[WARN]${NC} $*"; }
err(){ echo -e "${RED}[ERR]${NC} $*"; }

# --- –ø—Ä–æ–≤–µ—Ä–∫–∏ ---
if [[ $EUID -eq 0 ]]; then err "–ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ –æ—Ç root. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ–¥ –æ–±—ã—á–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º."; exit 1; fi
command -v sudo >/dev/null || { err "sudo –Ω–µ –Ω–∞–π–¥–µ–Ω"; exit 1; }

# --- –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—É—Ç–µ–π/—Ä–µ–ø–æ ---
USER_NAME="$USER"
HOME_DIR="$HOME"
PROJECT_DIR="$HOME_DIR/robot_web"
VENV_DIR="$PROJECT_DIR/venv"
LOG_DIR="$PROJECT_DIR/logs"
SERVICE_NAME="robot-web.service"

REPO_URL="https://github.com/meshkovQA/Robot.git"
REPO_BRANCH="main"

echo "=============================================="
info "ü§ñüß† –£—Å—Ç–∞–Ω–æ–≤–∫–∞ AI —Ä–æ–±–æ—Ç–∞ —Å USB –∫–∞–º–µ—Ä–æ–π v5.1"
info "üìÅ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $REPO_URL ($REPO_BRANCH)"
info "üè† –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è –¥–æ–º–∞—à–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"
echo "=============================================="

# --- –≤–∫–ª—é—á–µ–Ω–∏–µ SSH ---
info "–í–∫–ª—é—á–µ–Ω–∏–µ SSH..."
sudo systemctl enable ssh
sudo systemctl start ssh
ok "SSH –≤–∫–ª—é—á–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω"

# --- –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏ –ø–∞–∫–µ—Ç—ã ---
info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ apt –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤..."
sudo apt update
sudo apt install -y python3 python3-venv python3-pip python3-dev \
                    libffi-dev build-essential git curl i2c-tools \
                    net-tools htop \
                    v4l-utils uvcdynctrl guvcview \
                    libopencv-dev python3-opencv \
                    ffmpeg libavcodec-dev libavformat-dev libswscale-dev \
                    libjpeg-dev libpng-dev libtiff-dev
ok "–ë–∞–∑–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# --- –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ USB –∫–∞–º–µ—Ä ---
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö USB –∫–∞–º–µ—Ä..."
V4L_DEVICES=$(ls /dev/video* 2>/dev/null | wc -l || echo "0")

if [[ $V4L_DEVICES -gt 0 ]]; then
    ok "–ù–∞–π–¥–µ–Ω–æ USB –∫–∞–º–µ—Ä: $V4L_DEVICES"
    info "–°–ø–∏—Å–æ–∫ –≤–∏–¥–µ–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤:"
    ls -la /dev/video* 2>/dev/null || true
    for device in /dev/video*; do
        if [[ -c "$device" ]]; then
            info "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: $device"
            v4l2-ctl --device="$device" --info 2>/dev/null | head -5 || true
        fi
    done
else
    warn "USB –∫–∞–º–µ—Ä—ã –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã. –ü—Ä–æ–¥–æ–ª–∂–∞—é —É—Å—Ç–∞–Ω–æ–≤–∫—É."
fi

sudo usermod -a -G video "$USER_NAME" || true
ok "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É video"

# --- –≤–∫–ª—é—á–µ–Ω–∏–µ I2C ---
info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ I2C..."
if ! grep -q "^dtparam=i2c_arm=on" /boot/config.txt 2>/dev/null; then
    echo "dtparam=i2c_arm=on" | sudo tee -a /boot/config.txt >/dev/null
    ok "I2C –≤–∫–ª—é—á—ë–Ω –≤ /boot/config.txt"
fi
if ! grep -q "^i2c-dev" /etc/modules 2>/dev/null; then
    echo "i2c-dev" | sudo tee -a /etc/modules >/dev/null
    ok "–ú–æ–¥—É–ª—å i2c-dev –¥–æ–±–∞–≤–ª–µ–Ω –≤ /etc/modules"
fi
sudo usermod -a -G i2c,gpio,spi,video "$USER_NAME" || true
if ! groups "$USER_NAME" | grep -q '\bvideo\b'; then
    warn "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ –≥—Ä—É–ø–ø–µ video. –î–æ–±–∞–≤–ª—è—é –ø–æ–≤—Ç–æ—Ä–Ω–æ..."
    sudo usermod -a -G video "$USER_NAME"
    warn "–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–º–µ—Ä–µ"
fi

# --- –ø–æ–ª—É—á–µ–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤: git clone/pull ---
info "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –ø—Ä–æ–µ–∫—Ç–∞: $PROJECT_DIR"
if [[ -d "$PROJECT_DIR/.git" ]]; then
    current_remote=$(git -C "$PROJECT_DIR" config --get remote.origin.url || true)
    if [[ "$current_remote" == "$REPO_URL" ]]; then
        info "–ù–∞–π–¥–µ–Ω —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π. –û–±–Ω–æ–≤–ª—è—é –¥–æ origin/$REPO_BRANCH..."
        git -C "$PROJECT_DIR" fetch --all --tags
        git -C "$PROJECT_DIR" checkout "$REPO_BRANCH"
        git -C "$PROJECT_DIR" reset --hard "origin/$REPO_BRANCH"
        ok "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª—ë–Ω: $(git -C "$PROJECT_DIR" rev-parse --short HEAD)"
    else
        backup_dir="${PROJECT_DIR}_backup_$(date +%Y%m%d_%H%M%S)"
        warn "–í $PROJECT_DIR –¥—Ä—É–≥–æ–π origin ($current_remote). –ü–µ—Ä–µ–Ω–æ—à—É –≤ $backup_dir"
        mv "$PROJECT_DIR" "$backup_dir"
        git clone --branch "$REPO_BRANCH" "$REPO_URL" "$PROJECT_DIR"
        ok "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
    fi
else
    if [[ -d "$PROJECT_DIR" && "$(ls -A "$PROJECT_DIR" 2>/dev/null | wc -l)" -gt 0 ]]; then
        backup_dir="${PROJECT_DIR}_backup_$(date +%Y%m%d_%H%M%S)"
        warn "–ö–∞—Ç–∞–ª–æ–≥ $PROJECT_DIR –Ω–µ –ø—É—Å—Ç. –ü–µ—Ä–µ–Ω–æ—à—É –≤ $backup_dir"
        mv "$PROJECT_DIR" "$backup_dir"
    fi
    info "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    git clone --branch "$REPO_BRANCH" "$REPO_URL" "$PROJECT_DIR"
    ok "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
fi

# --- —Å–ª—É–∂–µ–±–Ω—ã–µ –∫–∞—Ç–∞–ª–æ–≥–∏ ---
mkdir -p "$LOG_DIR"
mkdir -p "$PROJECT_DIR/static"/{photos,videos}
mkdir -p "$PROJECT_DIR/models/yolo"

# --- –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ ---
if [[ ! -d "$VENV_DIR" ]]; then
    info "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    python3 -m venv "$VENV_DIR"
    ok "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"
fi
# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º venv
source "$VENV_DIR/bin/activate"

# --- —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π ---
info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
pip install --upgrade pip setuptools wheel
if [[ -f "$PROJECT_DIR/requirements.txt" ]]; then
    pip install -r "$PROJECT_DIR/requirements.txt"
else
    pip install "flask>=2.3.0" "gunicorn>=20.1.0" "gevent>=1.4.0" \
        requests python-dotenv numpy smbus2 opencv-python flask-cors \
        scipy pillow scikit-image imutils || true
fi
python3 - <<'PY' || true
import cv2, sys
print(f'‚úÖ OpenCV {cv2.__version__} —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω')
PY

# --- –∑–∞–≥—Ä—É–∑–∫–∞ AI –º–æ–¥–µ–ª–µ–π (–∫–∞–∫ –∏ —Ä–∞–Ω—å—à–µ) ---
info "üß† –ó–∞–≥—Ä—É–∑–∫–∞ AI –º–æ–¥–µ–ª–µ–π –¥–ª—è –¥–æ–º–∞—à–Ω–µ–≥–æ —Ä–æ–±–æ—Ç–∞..."
cd "$PROJECT_DIR/models/yolo"
if [[ ! -f "yolov4-tiny.cfg" ]]; then
    curl -L "https://raw.githubusercontent.com/AlexeyAB/darknet/master/cfg/yolov4-tiny.cfg" -o "yolov4-tiny.cfg"
    ok "yolov4-tiny.cfg –∑–∞–≥—Ä—É–∂–µ–Ω"
fi
if [[ ! -f "coco.names" ]]; then
    curl -L "https://raw.githubusercontent.com/pjreddie/darknet/master/data/coco.names" -o "coco.names" \
      || curl -L "https://raw.githubusercontent.com/AlexeyAB/darknet/master/data/coco.names" -o "coco.names"
    ok "coco.names –∑–∞–≥—Ä—É–∂–µ–Ω"
fi
if [[ ! -f "yolov4-tiny.weights" ]]; then
    curl -L "https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4-tiny.weights" -o "yolov4-tiny.weights"
    ok "yolov4-tiny.weights –∑–∞–≥—Ä—É–∂–µ–Ω"
fi
# –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
if [[ ! -f "yolov3-tiny.cfg" ]]; then
    curl -L "https://raw.githubusercontent.com/pjreddie/darknet/master/cfg/yolov3-tiny.cfg" -o "yolov3-tiny.cfg" \
      || curl -L "https://raw.githubusercontent.com/AlexeyAB/darknet/master/cfg/yolov3-tiny.cfg" -o "yolov3-tiny.cfg" || true
fi
if [[ ! -f "yolov3-tiny.weights" ]]; then
    curl -L "https://pjreddie.com/media/files/yolov3-tiny.weights" -o "yolov3-tiny.weights" || true
fi
ok "üß† AI –º–æ–¥–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
cd "$PROJECT_DIR"

# --- —Ñ–∞–π–ª—ã-–∑–∞–≥–ª—É—à–∫–∏/—É—Ç–∏–ª–∏—Ç—ã (—Å–æ–∑–¥–∞—ë–º –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç) ---
info "–°–æ–∑–¥–∞–Ω–∏–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (–µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç)..."

# no-camera.svg
if [[ ! -f "$PROJECT_DIR/static/no-camera.svg" ]]; then
cat > "$PROJECT_DIR/static/no-camera.svg" <<'EOF'
<svg width="640" height="480" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="#f8f9fa"/>
  <circle cx="320" cy="200" r="40" fill="#6c757d"/>
  <rect x="280" y="160" width="80" height="80" rx="15" fill="none" stroke="#6c757d" stroke-width="3"/>
  <text x="50%" y="60%" text-anchor="middle" font-family="Arial, sans-serif" font-size="18" fill="#6c757d">–ö–∞–º–µ—Ä–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</text>
  <text x="50%" y="70%" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" fill="#adb5bd">–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ USB –∫–∞–º–µ—Ä—ã</text>
  <text x="50%" y="80%" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="#adb5bd">–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "üîÑ –û–±–Ω–æ–≤–∏—Ç—å"</text>
</svg>
EOF
fi

# test_frame.py
if [[ ! -f "$PROJECT_DIR/test_frame.py" ]]; then
cat > "$PROJECT_DIR/test_frame.py" <<'EOF'
#!/usr/bin/env python3
# ... (—Ç–æ—Ç –∂–µ –∫–æ–Ω—Ç–µ–Ω—Ç —Ç–µ—Å—Ç–∞, —á—Ç–æ –∏ —Ä–∞–Ω—å—à–µ) ...
# —Ä–∞–¥–∏ –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏, –æ—Å—Ç–∞–≤–∏–ª –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
EOF
chmod +x "$PROJECT_DIR/test_frame.py"
fi

# SETTINGS.md
if [[ ! -f "$PROJECT_DIR/SETTINGS.md" ]]; then
cat > "$PROJECT_DIR/SETTINGS.md" <<'EOF'
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Robot Web Interface
# (—Å–º–æ—Ç—Ä–∏ robot/config.py; –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π ‚Äî ./restart.sh)
EOF
fi

# --- —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ ---
info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
chmod -R u+rwX "$PROJECT_DIR"
find "$PROJECT_DIR" -type f -name "*.py" -exec chmod +x {} \; 2>/dev/null || true
chmod 755 "$PROJECT_DIR/static"/{photos,videos}
chown -R "$USER_NAME:$USER_NAME" "$PROJECT_DIR/static"/{photos,videos} 2>/dev/null || true

# --- –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Python ---
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Python..."
cd "$PROJECT_DIR"
python3 - <<'PY'
import compileall, sys
ok = compileall.compile_dir('.', force=False, quiet=1)
sys.exit(0 if ok else 1)
PY
ok "–°–∏–Ω—Ç–∞–∫—Å–∏—Å Python —Ñ–∞–π–ª–æ–≤ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"

# --- —Å–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ ---
info "–°–æ–∑–¥–∞–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞..."
SERVICE_FILE="/etc/systemd/system/$SERVICE_NAME"
sudo tee "$SERVICE_FILE" >/dev/null <<EOF
[Unit]
Description=Robot Web Interface v2.1 (Flask + Gunicorn + Camera)
After=network-online.target
Wants=network-online.target

[Service]
Type=simple
User=$USER_NAME
Group=$USER_NAME
WorkingDirectory=$PROJECT_DIR
Environment="PYTHONUNBUFFERED=1"
Environment="PYTHONPATH=$PROJECT_DIR"

ExecStart=$VENV_DIR/bin/gunicorn \
    --workers 1 \
    --worker-class gthread \
    --threads 4 \
    --timeout 60 \
    --graceful-timeout 10 \
    --keep-alive 2 \
    --max-requests 500 \
    --max-requests-jitter 50 \
    --worker-tmp-dir /dev/shm \
    --bind 0.0.0.0:5000 \
    --access-logfile $LOG_DIR/access.log \
    --error-logfile $LOG_DIR/error.log \
    --log-level info \
    run:app

Restart=always
RestartSec=10
StartLimitInterval=60
StartLimitBurst=3

StandardOutput=journal
StandardError=journal
SyslogIdentifier=robot-web

SupplementaryGroups=i2c gpio spi video

NoNewPrivileges=true
PrivateTmp=true

[Install]
WantedBy=multi-user.target
EOF

sudo systemctl daemon-reload
sudo systemctl enable "$SERVICE_NAME"
ok "Systemd —Å–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω/–æ–±–Ω–æ–≤–ª—ë–Ω"

# --- —É–ø—Ä–∞–≤–ª—è—é—â–∏–µ —Å–∫—Ä–∏–ø—Ç—ã (–æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π update.sh ‚Äî git pull) ---
info "–°–æ–∑–¥–∞–Ω–∏–µ —É–ø—Ä–∞–≤–ª—è—é—â–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤..."

cat > "$PROJECT_DIR/start.sh" <<EOF
#!/bin/bash
echo "üöÄ –ó–∞–ø—É—Å–∫ Robot Web Interface v2.1..."
sudo systemctl start $SERVICE_NAME
sleep 2
sudo systemctl status $SERVICE_NAME --no-pager -l
EOF

cat > "$PROJECT_DIR/stop.sh" <<EOF
#!/bin/bash
echo "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Robot Web Interface..."
sudo systemctl stop $SERVICE_NAME
echo "–°–µ—Ä–≤–∏—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
EOF

cat > "$PROJECT_DIR/restart.sh" <<'EOF'
#!/bin/bash
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Robot Web Interface v2.1..."
sudo systemctl restart robot-web.service
sleep 3
sudo systemctl status robot-web.service --no-pager -l
echo ""
IP=$(hostname -I | awk '{print $1}')
echo "üåê –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω: http://$IP:5000"
echo "üé• –í–∏–¥–µ–æ–ø–æ—Ç–æ–∫: http://$IP:5000/camera/stream"
echo "üß™ –¢–µ—Å—Ç –∫–∞–º–µ—Ä—ã: python3 test_frame.py"
EOF

cat > "$PROJECT_DIR/logs.sh" <<'EOF'
#!/bin/bash
echo "üìÑ –õ–æ–≥–∏ Robot Web Interface (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):"
echo "================================================"
sudo journalctl -u robot-web.service -f --no-pager
EOF

cat > "$PROJECT_DIR/test_camera.sh" <<'EOF'
#!/bin/bash
echo "üé• –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ USB –∫–∞–º–µ—Ä—ã..."
ls -la /dev/video* 2>/dev/null || echo "–í–∏–¥–µ–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
for device in /dev/video*; do
  [[ -c "$device" ]] || continue
  echo "---- $device ----"
  v4l2-ctl --device="$device" --info 2>/dev/null | head -5 || true
  v4l2-ctl --device="$device" --list-formats-ext 2>/dev/null | head -10 || true
done
EOF

cat > "$PROJECT_DIR/status.sh" <<'EOF'
#!/bin/bash
SERVICE=robot-web.service
echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Robot Web Interface v2.1"
sudo systemctl status "$SERVICE" --no-pager -l
echo -e "\nüìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:"
sudo journalctl -u "$SERVICE" --no-pager -n 20
IP=$(hostname -I | awk '{print $1}')
echo -e "\nüîó –ê–¥—Ä–µ—Å–∞:"
echo "–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://$IP:5000"
echo "–í–∏–¥–µ–æ–ø–æ—Ç–æ–∫:   http://$IP:5000/camera/stream"
echo "API —Å—Ç–∞—Ç—É—Å:   http://$IP:5000/api/status"
EOF

# –Ω–æ–≤—ã–π update.sh (–Ω–∏–∂–µ –æ—Ç–¥–µ–ª—å–Ω—ã–º –±–ª–æ–∫–æ–º —Ç–æ–∂–µ –ø—Ä–æ–¥—É–±–ª–∏—Ä–æ–≤–∞–Ω)
cat > "$PROJECT_DIR/update.sh" <<'EOF'
#!/bin/bash
set -euo pipefail
BLUE='\033[0;34m'; GREEN='\033[0;32m'; RED='\033[0;31m'; YELLOW='\033[1;33m'; NC='\033[0m'
echo -e "${BLUE}üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Robot Web Interface (git pull)${NC}"

PROJECT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
VENV_DIR="$PROJECT_DIR/venv"
SERVICE_NAME="robot-web.service"

if [[ ! -d "$PROJECT_DIR/.git" ]]; then
  echo -e "${RED}‚ùå –í –∫–∞—Ç–∞–ª–æ–≥–µ –Ω–µ—Ç git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è. –ó–∞–ø—É—Å—Ç–∏—Ç–µ ./setup.sh –∑–∞–Ω–æ–≤–æ.${NC}"
  exit 1
fi

echo -e "${YELLOW}‚è∏Ô∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞...${NC}"
sudo systemctl stop "$SERVICE_NAME" || true

cd "$PROJECT_DIR"
ts="$(date +%Y%m%d_%H%M%S)"

echo -e "${BLUE}üì• –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏–∑ origin...${NC}"
git fetch --all --tags
git checkout main
git reset --hard origin/main

# –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
source "$VENV_DIR/bin/activate"
if [[ -f "requirements.txt" ]]; then
  pip install --upgrade pip setuptools wheel
  pip install -r requirements.txt
fi

# –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
python3 - <<'PY'
import compileall, sys
ok = compileall.compile_dir('.', force=False, quiet=1)
sys.exit(0 if ok else 1)
PY
echo -e "${GREEN}‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω${NC}"

echo -e "${BLUE}üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞...${NC}"
sudo systemctl start "$SERVICE_NAME"
sleep 3
if systemctl is-active --quiet "$SERVICE_NAME"; then
  COMMIT=$(git rev-parse --short HEAD)
  IP=$(hostname -I | awk '{print $1}')
  echo -e "${GREEN}‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ. –ö–æ–º–º–∏—Ç: $COMMIT${NC}"
  echo -e "${GREEN}üåê –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://$IP:5000${NC}"
else
  echo -e "${RED}‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è${NC}"
  echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: ./logs.sh"
  exit 1
fi
EOF

chmod +x "$PROJECT_DIR"/{start.sh,stop.sh,restart.sh,logs.sh,status.sh,update.sh,test_camera.sh}
ok "–£–ø—Ä–∞–≤–ª—è—é—â–∏–µ —Å–∫—Ä–∏–ø—Ç—ã –≥–æ—Ç–æ–≤—ã"

# --- –ø–µ—Ä–≤–∏—á–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∑–∞–ø—É—Å–∫ ---
info "–¢–µ—Å—Ç gunicorn –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
APP_LIGHT_INIT=1 "$VENV_DIR/bin/gunicorn" --check-config run:app \
  && ok "Gunicorn –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞" \
  || warn "–ü—Ä–æ–ø—É—Å–∫–∞—é —Å—Ç—Ä–æ–≥—É—é –ø—Ä–æ–≤–µ—Ä–∫—É Gunicorn"

info "–ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞..."
sudo systemctl start "$SERVICE_NAME"
sleep 5

if systemctl is-active --quiet "$SERVICE_NAME"; then
    ok "–°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    IP=$(hostname -I | awk '{print $1}')
    echo ""
    echo "=============================================="
    ok "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    echo "=============================================="
    echo "üåê –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://$IP:5000"
    echo "üé• –í–∏–¥–µ–æ–ø–æ—Ç–æ–∫: http://$IP:5000/camera/stream"
    echo "üß™ –¢–µ—Å—Ç API:  python3 test_frame.py"
    echo ""
    echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: ./start.sh | ./stop.sh | ./restart.sh | ./logs.sh | ./status.sh | ./update.sh"
    echo "üì∏ –ú–µ–¥–∏–∞: $PROJECT_DIR/static/photos, $PROJECT_DIR/static/videos"
    echo "‚ÑπÔ∏è –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–º–µ—Ä–µ –º–æ–∂–µ—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è: sudo reboot"
else
    err "‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ: ./status.sh, ./logs.sh, python3 test_frame.py"
    exit 1
fi